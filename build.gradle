plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group 'io.github.sroca3'
version '0.1.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compileClasspath

    options
    {
        setMemberLevel JavadocMemberLevel.PUBLIC
        setAuthor true

        links "https://docs.oracle.com/javase/8/docs/api/"
    }
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
            pom {
                name = 'Kairos'
                description = 'A library to convert from momentjs time formats to java'
                url = 'https://github.com/Sroca3/kairos'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'sroca3'
                        name = 'Stephen Roca'
                        email = 'stephen.roca@outlook.com'
                    }
                }
                scm {
                    url = 'https://github.com/Sroca3/kairos'
                }
            }
            repositories {
                mavenLocal()
                maven {
                    def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
                    def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
                    url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                    credentials {
                        username "$repositoryUsername"
                        password "$repositoryPassword"
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}